name: Test

on:
  push:
    tags:
    - "v*"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get commits
      id: commits
      run: |
        echo "MAIN=$(git show -s --format="%H" origin/main)" >> $GITHUB_OUTPUT
        echo "TAG=$(git rev-list -n 1 ${GITHUB_REF#refs/*/})" >> $GITHUB_OUTPUT
    - name: Print commits
      run: |
        echo "Main commit: ${{ steps.commits.outputs.MAIN }}"
        echo "Tag commit: ${{ steps.commits.outputs.TAG }}"
    - name: Compare commits
      if: ${{ steps.commits.outputs.MAIN != steps.commits.outputs.TAG }}
      uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0 # v6.3.3
      with:
        script: |
            core.setFailed('Tagged commit does not match main')

  version-bump:
    runs-on: ubuntu-latest
    needs: [validate]
    env:
      VERSION: $GITHUB_REF_NAME
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          ref: 'main'
          token: ${{ secrets.CONTENTS_RW }}
      - name: Set version for commit message
        id: bumped_version
        run: echo "RELEASE_VERSION=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
      - name: Update version
        run: python scripts/update_version.py ${{ env.VERSION }}
      - name: Auto-commit changes
        uses: stefanzweifel/git-auto-commit-action@3ea6ae190baf489ba007f7c92608f33ce20ef04a #v4.16.0
        with:
          commit_message: Bump version to ${{ steps.bumped_version.outputs.RELEASE_VERSION }} [skip ci]
      - name: Merge changes to main
        env:
          key: ${{ secrets.ADMIN_RW }}
        run: |
          git tag -f ${{ env.VERSION }}
          git push -f origin ${{ env.VERSION }}

  test:
    runs-on: ubuntu-latest
    needs: [version-bump]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest tox
    - name: Run tests
      run: |
        tox
