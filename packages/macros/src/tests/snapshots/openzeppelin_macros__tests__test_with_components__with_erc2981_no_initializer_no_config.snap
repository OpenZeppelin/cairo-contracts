---
source: src/tests/test_with_components.rs
expression: result
snapshot_kind: text
---
TokenStream:

#[starknet::contract]
pub mod MyContract {
    use starknet::ContractAddress;

    #[storage]
    pub struct Storage {
        #[substorage(v0)]
        pub erc2981: ERC2981Component::Storage,
    }

    #[constructor]
    fn constructor(ref self: ContractState, default_royalty_receiver: ContractAddress) {}
    use openzeppelin_token::common::erc2981::ERC2981Component;

    component!(path: ERC2981Component, storage: erc2981, event: ERC2981Event);

    impl ERC2981InternalImpl = ERC2981Component::InternalImpl<ContractState>;

    #[event]
    #[derive(Drop, starknet::Event)]
    enum Event {
        #[flat]
        ERC2981Event: ERC2981Component::Event,
    }
}


Diagnostics:

====
Warning: It looks like the initializers for the following components are missing:

ERC2981

This may lead to unexpected behavior.
We recommend adding the corresponding initializer calls to the constructor.
========
Warning: The ERC2981 component requires an ImmutableConfig implementation in scope and
it looks like it is missing.

You can use the default implementation by importing it:

`use openzeppelin_token::common::erc2981::DefaultConfig;`
====

AuxData:

None
