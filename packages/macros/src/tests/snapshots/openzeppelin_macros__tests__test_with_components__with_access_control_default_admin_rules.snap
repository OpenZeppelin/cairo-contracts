---
source: src/tests/test_with_components.rs
expression: result
snapshot_kind: text
---
TokenStream:

#[starknet::contract]
pub mod Contract {
    use openzeppelin_access::accesscontrol::extensions::DefaultConfig;
    use starknet::ContractAddress;

    const INITIAL_DELAY: u64 = 3600; // 1 hour

    #[storage]
    pub struct Storage {
        #[substorage(v0)]
        pub access_control_DAR: AccessControlDefaultAdminRulesComponent::Storage,
    }

    #[constructor]
    fn constructor(ref self: ContractState, default_admin: ContractAddress) {
        self.access_control_DAR.initializer(INITIAL_DELAY, default_admin);
    }
    use openzeppelin_access::accesscontrol::extensions::AccessControlDefaultAdminRulesComponent;

    component!(
        path: AccessControlDefaultAdminRulesComponent,
        storage: access_control_DAR,
        event: AccessControlDefaultAdminRulesEvent,
    );

    impl AccessControlDefaultAdminRulesInternalImpl =
        AccessControlDefaultAdminRulesComponent::InternalImpl<ContractState>;

    #[event]
    #[derive(Drop, starknet::Event)]
    enum Event {
        #[flat]
        AccessControlDefaultAdminRulesEvent: AccessControlDefaultAdminRulesComponent::Event,
    }
}


Diagnostics:

None

AuxData:

None
