---
source: src/tests/test_with_components.rs
expression: result
snapshot_kind: text
---
TokenStream:

#[starknet::contract]
pub mod MyContract {
    #[storage]
    pub struct Storage {
        #[substorage(v0)]
        pub governor: GovernorComponent::Storage,
    }

    #[constructor]
    fn constructor(ref self: ContractState) {
        self.governor.initializer();
    }
    use openzeppelin_governance::governor::GovernorComponent;

    component!(path: GovernorComponent, storage: governor, event: GovernorEvent);

    impl GovernorInternalImpl = GovernorComponent::InternalImpl<ContractState>;

    #[event]
    #[derive(Drop, starknet::Event)]
    enum Event {
        #[flat]
        GovernorEvent: GovernorComponent::Event,
    }
}


Diagnostics:

====
Warning: The Governor component requires an ImmutableConfig implementation in scope and
it looks like it is missing.

You can use the default implementation by importing it:

`use openzeppelin_governance::governor::DefaultConfig;`
====

AuxData:

None
