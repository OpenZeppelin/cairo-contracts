---
source: src/tests/test_with_components.rs
expression: result
snapshot_kind: text
---
TokenStream:

#[starknet::contract(account)]
pub mod MyContract {
    #[storage]
    pub struct Storage {
        #[substorage(v0)]
        pub account: AccountComponent::Storage,
    }

    #[constructor]
    fn constructor(ref self: ContractState, public_key: felt252) {
        self.account.initializer(public_key);
    }
    use openzeppelin_account::AccountComponent;

    component!(path: AccountComponent, storage: account, event: AccountEvent);

    impl AccountInternalImpl = AccountComponent::InternalImpl<ContractState>;

    #[event]
    #[derive(Drop, starknet::Event)]
    enum Event {
        #[flat]
        AccountEvent: AccountComponent::Event,
    }
}


Diagnostics:

None

AuxData:

None
